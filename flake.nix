# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.22)
{
  # A helpful description of your flake
  description = "macha - CLI tool to ease creation of dev environments with Nix, Flakes, and Home-manager";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs }:
    let
      goVersion = 24;

      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { 
	  inherit system; 
	  overlays = [ self.overlays.default ];
	};
      });
    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      overlays.default = final: prev: {
	go = final."go_1_${toString goVersion}";
      };

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.mkShell {
          # Pinned packages available in the environment
          packages = with pkgs; [
            nixpkgs-fmt
	    
	    # Go Version is Overlaid
	    go

	    gotools
	    golangci-lint
          ];
        };
      });
    };
}
